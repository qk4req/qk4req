<html>
<!--%SAVEBEGIN%fugitivo.trct|id=sex6NameSlider,value=24862|id=animShow,value=bounceInRight|id=animHide,value=bounceOutRight|id=sexMesshadow,value='top right'|id=sex6Name,value=#FF6441A5|id=se5xName,value=#FFFFFFFF|id=se4xName,value=#FFFFFFFF|id=sex3Name,value=#FF404040|id=se2xName,value=#FF432B6E|id=1sexName,value=#FFFFFFFF|id=sexTssem,value=#FF00EE00|id=sex6N4ameSlider,value=339|id=s4exMesBdackTM,value=#88FFFFFF|id=sexMdessha4dowtm,value=|id=fodntsdf533sd,value=Impact,size=10|id=sexdTe4xt,value=#FFAA66AA|id=sexMedsBackTM,value=#88FF484D|id=sexMesshdadowtm,value=text-shadow: 0 1px 1px black;|id=fontszdf33sd,value=Impact,size=10|id=dfцz3ee32s333,ext1=,img1=,t1=8,t2=8,t3=8,t4=8,ext2=,img2=|id=sexTdm,value=#FF556677|id=s4exMesBackTM,value=#88FFFFFF|id=sexMessha4dowtm,value=|id=fontsdf533sd,value=Lucida Console,size=16|id=sexTe4xt,value=#FFAA66AA|id=sexMesBackTM,value=#886065C1|id=sexMesshadowtm,value=text-shadow: 0 1px 1px black;|id=fontsdf33sd,value=Lucida Console,size=16|id=dfц3ee32s333,ext1=,img1=,t1=8,t2=8,t3=8,t4=8,ext2=,img2=|id=sexTm,value=#FF556677|id=s4exMes54BackTM,value=#88FFFFFF|id=sexMessh1a4dowtm,value=|id=fontsd1f533sd,value=Impact,size=10|id=sdexTe43xt,value=#FFAA66AA|id=sexqweM666esBack,value=#88E7C417|id=sexMess1234haewcvbdow,value=text-shadow: 0 1px 1px black;|id=fontdsdfxxcv33xcvxs33d,value=Impact,size=10|id=dfexcvx33cveач32s111,ext1=,img1=,t1=0,t2=0,t3=0,t4=0,ext2=,img2=|id=sex333sdvTm,value=#FF556677|id=dfцчee32ssd3444,top=8,left=8,right=8,bottom=8|id=dfцчee32ssdxx3444,top=4,left=4,right=4,bottom=4|id=dfцчdbee32ssd3444,top=4,left=4,right=4,bottom=4|id=dсммцчee32ssdxx3444,top=0,left=0,right=0,bottom=0|id=dfцчee32ssd33444,top=8,left=8,right=8,bottom=8|id=dfцчee32ssdxxс4ф3444,top=0,left=4,right=4,bottom=4|%SAVEEND%-->
<!--%NAME=Fugitivo template%-->
<!--%EXT=HTM%-->
<!--%DESC=Шаблон для чата, который занимает весь экран, сам чат быстро исчезает, есть оповещения.%-->
<head>
	<meta charset="utf-8">
	<script src="/vars.js"></script>
  <script src="/js/jquery.js"></script>
  <script src="/js/jquery.amaran.min.js"></script>
  <link rel="stylesheet" href="/css/amaran.min.css">
  <link rel="stylesheet" href="/css/animate.min.css">
	<script type="text/javascript">
		var _boolAllowHide = 0;
		var _showImages = 0;
		var _showSmiles = 1;
		var _showMode = 0;
		var _topHideY = 0;

    var ggbg = /\[sml\]file.*?www\\(.*?).png\[\/sml\]/g;
var smlr = /\[sml\](.*?)\[\/sml\]/g;
var urlr = /\[url\](.*?)\[\/url\]/g;
var br = /\[b\](.*?)\[\/b\]/g;
var remainMessages = 30;
var chats = {
    delMe: [],
    oldMes: {},
    cmds: {}
};
var firstTime=false;

function extractDomain(url) {
    try{
        var domain;
        //find & remove protocol (http, ftp, etc.) and get domain
        if (url.indexOf("://") > -1) {
            domain = url.split('/')[2];
        }
        else {
            domain = url.split('/')[0];
        }

        //find & remove port number
        domain = domain.split(':')[0];

        return domain;
    }catch( err ){
        return url;
    }
};

function isOffscreen(el) {
    try{
        if( _boolAllowHide )
            return el.offset().top < _topHideY;
        return (el.offset().top + el.height()) < _topHideY;
    }catch( err ){
        return true;
    }
};

function insertSmiles(text) {
    var oldText;

    var j = 10;

   // do {
    //    oldText = text;
        if (_showSmiles)
            text = text
        .replace(ggbg, "<img src='$1.png' class='message_smile' />") // BUGFIX :((
        .replace(smlr, "<img src='$1' class='message_smile' />")
        ;

        text = text
      .replace(br, "<b>$1</b>")
      .replace(urlr, function (lnk) {
          return "<a href='" + lnk + "'>" + extractDomain(lnk) + "</a>";
      });

        if (_showImages)
            text = text
        .replace(urlr, "<img src='$1' class='message_img' />");

      //  if( (--j) < 0 ){
      //      text += "LOCK DETECTED!";
      //      break;
     //   }
 //   } while (oldText != text)

    return text;
}

function createMessage(mes) {
    var s = '';
    if (mes.source !== undefined) {
        s = "<img src='"+_rootAsset+"img/" + mes.source + ".png' class='message_source' />";
    };
  
  if( mes.icon !== undefined ){
        s += "<img src='" + mes.icon + "' class='message_icon' />";
  }

    if( mes.badges !== undefined && mes.badges.length > 0 ){
        for( var b=0; b<mes.badges.length; ++b ){
            s += "<img class='message_badge' src='" + _rootAsset + mes.badges[b] + "' />";
        }
    }

    var title = s;

    var mclass = "message";

   // console.log( mes.text );

    if( mes.color === undefined || mes.color == "" ){
        title += " " + mes.name;
    }else{
        title += " <font color='" + mes.color + "'>" + mes.name + "</font>";
    }

    if (mes.source === undefined) {
        mclass = "messagesys";
        s = "<span class='message_textsys'>" + insertSmiles(mes.text);
    } else {
        if (mes.tome == 'True'){
            mclass = "messagetm";
            s = "<span class='message_texttm'>" + insertSmiles(mes.text);
        }else
            s = "<span class='message_text'>" + insertSmiles(mes.text);
    }

    s += "</span>";

    // Создается объект на основе разметки сообщения
    return {
            title: title,
            text: s
    };
}

function getMesType(mes){
  if (mes.source === undefined) {
    return 0;
  } else {
    if (mes.tome == 'True'){
      return 1;
    }else
      return 2;
    }  
}

function onNewMessage(mes) {
    return createMessage( mes );
}

function onClearUser(nick){
    console.log("clear user:" + nick);
}

function onData(data) {
   // try{
        var start = data.messages.length - remainMessages;
        if (start < 0) start = 0;

        if( allowNotify ){
            for( var c=0; c<data.cmds.length; ++c){
                var cmd = data.cmds[c];

                console.log(cmd);

                var old = chats.cmds[cmd.gid]
                if( old == undefined ){
                    chats.cmds[cmd.gid] = cmd;
                    if( cmd.type == "shownotify"){
                          $.getJSON(_rootChat+"/complete?"+cmd.gid)
                            .done(function(data){})
                            .fail(function (jqxhr, textStatus, error) {
                            });

                        
                        openNotification( cmd.prms[0] );

                        break;
                    }
                }
            }
        }

        for (var i = start; i < data.messages.length; ++i) {
            var mes = data.messages[i];
            var old = chats.oldMes[mes.gid];
            if (old == undefined) {
              //  try {
            //console.log(mes);

                    var m = onNewMessage(mes);
firstTime=true;
                    if( firstTime ) {
                    //console.log("addmessage");
                        var mesDivClass = ['amesys','ametm','amenr'][getMesType(mes)];

                        $.amaran({
                            content:{
                                themeName:'myTheme',
                                title: m.title,
                                message: m.text
                            },
                            delay: 24862
                            ,
                            'cssanimationIn':'bounceInRight',
                            'cssanimationOut'   :'bounceOutRight',
                            position: 'top right',
                            themeTemplate:function(data){
                              return '<div class="'+mesDivClass+'"><div class="inner-content"><span class="title">'+data.title+
                              '</span><span class="message">'
                              +data.message+'</span></div></div>';
                            }
                        });
                    }

                    chats.delMe.push(m);
                    chats.oldMes[mes.gid] = {
                        delay: 5,
                        message: m,
                        data: mes
                    };
                //} catch (err) {
               //   console.error(err);
               //    //alert("failed: " + err);
               // }
            }else{
                if( old.data.text != mes.text ){
                    console.log("text deleted: " + old.data.text );
                    old.data = mes;
                    old.message.html("<div></div>");
                }
            }
        }

        firstTime=true;

   // }catch(pika){
        //alert(pika);
    ///    console.log(pika);
    //}
    setTimeout(getData, 1000);

}


function getData() {
    //console.log("getdata");
    $.getJSON(_rootChat)
        .done(onData)
        .fail(function (jqxhr, textStatus, error) {
            console.log("failed: " + error);
            setTimeout(getData, 5000);
        });
}

function onUpdate(){

}

function onStart(){
    getData();
}
	</script>


  <audio id="snd">
    <source src="/Sounds/follower2.mp3" type="audio/mp3">
  </audio>
	
	<style type="text/css">
		::-webkit-scrollbar {
			visibility: hidden;
		}

		html, body {
		    background-color: rgba(255,255,255,0.0);
            opacity: 0.99;
            padding: 0 0 0 0;
            margin: 0 0 0 0;
            font-size: 20;
		}

*,
*:before,
*:after { box-sizing: border-box; }

.pull {
  position: fixed;
  bottom: 0;
  width: 100%;
  -webkit-perspective: 250px;
  perspective: 250px;
  -webkit-perspective-origin: right center;
  perspective-origin: right center;
  -webkit-transition: -webkit-perspective .1s ease;
  transition: perspective .1s ease;
}

.pull.open {
  -webkit-perspective: 500px;
  perspective: 500px;
}

.notification {
  z-index: 4;
  opacity: 0;
  visibility: hidden;
  width: 100px;
  min-height: 42px;
  margin: 20px auto 70px;
 /* box-shadow: 0 0 2px rgba(0, 0, 0, 0.3);*/
  overflow: hidden;
  -webkit-transition: opacity .5s ease-out, -webkit-transform .35s ease, width .5s ease;
  transition: opacity .5s ease-out, transform .35s ease, width .5s ease;
  white-space: nowrap;
}

.notification.show { visibility: visible; }

.notification.negative .impact,
.notification.warning .impact { height: 81px; }

.notification.positive {
  -webkit-transform: translate3d(0, 0, -60px) rotateY(-40deg);
  transform: translate3d(0, 0, -60px) rotateY(-40deg);
}

.notification.positive .fa { background-color: #6441A5; }

.notification.open--rot {
  opacity: 1;
  -webkit-transform: translate3d(0, 0, 0) rotateY(0deg);
  transform: translate3d(0, 0, 0) rotateY(0deg);
  width: 100px;
}

.notification.open--rot.open--width { width: 360px; }

.notification.open--rot.open--width .message-container { width: 260px; }

.notification.open--rot h1 img { display: inline-block; }

.notification .flex-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: no-wrap;
  -ms-flex-wrap: no-wrap;
  flex-wrap: no-wrap;
  -webkit-box-align: stretch;
  -webkit-align-items: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-transition: -webkit-transform .35s ease;
  transition: transform .35s ease;
  -webkit-transform: translate3d(0, 55px, 0);
  transform: translate3d(0, 55px, 0);
}

.notification .flex-container.drop-down {
 -webkit-transform: translate3d(0, 25px, 0px);
  transform: translate3d(0, 25px, 0px);
}

.notification .impact {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  z-index: 2;
  width: 100px;
  height: 88px;
  background-color: #6441A5;
}

.notification .impact .icon { margin: auto; }

.notification .impact .fa {
  color: #FFFFFF;
  text-align: center;
  font-size: 46px;
}

.notification .message-container {
  background-color: #FFFFFF;;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  width: 0;
  overflow: hidden;
  -webkit-transition: width .5s ease;
  transition: width .5s ease;
}

.notification .message {
  width: 260px;
  padding: 15px 10px 13px;
  margin: auto;
  white-space: nowrap;
}

.notification .message p {
  font-size: 12px;
  line-height: 145%;
  margin-bottom: 0;
  color: #404040;
}

.notification .message strong {
  font-weight: bold;
  margin-bottom: 0;
}

.notification h1 {
  background-color: #432B6E;
  color: #FFFFFF;
  text-align: center;
  height: 40px;
  padding: 12px;
  position: relative;
  z-index: -1;
  font-size: 20px;
  overflow: hidden;
  -webkit-transition: background .25s ease;
  transition: background .25s ease;
}

.notification-hidden { display: none; }


/*Контейнер чата*/
.container{
  overflow: hidden;
  position: fixed;
  width: 90%;
}

.message_source{
  margin-right: 2px;
}

/*Ссылка*/
.message_link{
  color:#00EE00;
}

.message_badge{
  margin-right: 1px;
  width: 16px;
  height: 16px;
}

/*'amesys','ametm','amenr'*/

.amaran.myTheme{
  padding: 0px;
  width: 339px;
  border-radius: 0px;
  background-color: transparent;
}

.amaran.myTheme .amesys .title {
  background-color:  rgba( 255, 255, 255, 0.5333334 );  

font-family: 'Impact'; font-size: 10pt;
  color: #AA66AA;
}

.amaran.myTheme .amesys {
  background-color:  rgba( 255, 72, 77, 0.5333334 );  
text-shadow: 0 1px 1px black;
font-family: 'Impact'; font-size: 10pt;

  color: #556677;
}


.amaran.myTheme .ametm .title {
  background-color:  rgba( 255, 255, 255, 0.5333334 );  

font-family: 'Lucida Console'; font-size: 16pt;
  color: #AA66AA;
}

.amaran.myTheme .ametm {
  background-color:  rgba( 96, 101, 193, 0.5333334 );  
text-shadow: 0 1px 1px black;
font-family: 'Lucida Console'; font-size: 16pt;

  color: #556677;
}

.amaran.myTheme .amenr .title {
  background-color:  rgba( 255, 255, 255, 0.5333334 );  

font-family: 'Impact'; font-size: 10pt;
  color: #AA66AA;
}

.amaran.myTheme .amenr {
  background-color: rgba( 231, 196, 23, 0.5333334 );
text-shadow: 0 1px 1px black;
font-family: 'Impact'; font-size: 10pt;

  color: #556677;
}

.amaran.myTheme .amenr .inner-content{
  padding: 8px 8px 8px 8px;
  margin: 4px 4px 4px 4px;
}

.amaran.myTheme .amesys .inner-content{
  padding: 4px 4px 4px 4px;
  margin: 0px 0px 0px 0px;}

.amaran.myTheme .ametm .inner-content{
  padding: 8px 8px 8px 8px;
  margin: 0px 4px 4px 4px;}

.amaran-wrapper{
  left: 20%;
}

.amaran.myTheme span{
  display: block;
}


</style>
</head>
<body onload="onStart();">
    <div class="pull">
  	  <div class="notification positive">
  	    <div class="flex-container">
  	      <div class="impact">
  	        <div class="icon">OXL</div>
  	      </div>
  	      <div class="message-container">
  	        <div> <strong id='notext'>XXXX теперь новый подписчик!</strong></div>
  	      </div>
  	    </div>
  	    <h1>TwoRatChat notification.</h1>
  	  </div>
  	</div>
	<div id="root">
		 <div style="height:2000px" />
	</div>


</body>
<script>
/*$(function() {
  $('.notification').addClass('notification-hidden');
  openNotification('positive');
  setTimeout(closeNotification, 10000);
});*/
var allowNotify=true;


function openNotification(text) {
	if( allowNotify ){
		allowNotify=false;

    var snd = document.getElementById("snd");
    snd.load();
    snd.play(); 

		$('#notext').html( text );
		 var whichNotification = 'positive';
		  var thisNotification = $('.notification.' + whichNotification);
		  thisNotification.removeClass('notification-hidden');
		  setTimeout(function() {
		    thisNotification.addClass('open');
		    var openNotification = $('.notification.open');
		    $('.pull').addClass('open');
		    openNotification.addClass('show').addClass('open--rot');
		    
		    setTimeout(function() {
		      openNotification.addClass('open--width');
		    }, 500);
		    
		    setTimeout(function(){
		      openNotification.find('.flex-container').addClass('drop-down');
		    }, 1000);

		    setTimeout(function(){
		      closeNotification();
		    }, 10000);

		    $('body').append('<div class="overlay"></div>');
		  }, 50);
	}else
		return false;
}

function closeNotification() {
  var type = $('.notification.open');

  type.find('.drop-down').removeClass('drop-down');
  
  setTimeout(function(){
    type.removeClass('open--width');
  }, 400);
  
  setTimeout(function() {
    type.removeClass('open--rot')
  }, 700);
  setTimeout(function() {
    type.removeClass('show');
  }, 900);
  setTimeout(function() {
    $('.overlay').remove();
    type.removeClass('open');
  }, 1000);
  setTimeout(function() {
    type.addClass('notification-hidden')

  }, 1050);

  setTimeout(function() {
    allowNotify=true;    
  }, 2000);
}
</script>
</html>